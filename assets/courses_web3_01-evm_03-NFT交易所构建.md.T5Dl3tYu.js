import{_ as i,o as s,c as a,R as e}from"./chunks/framework.FVQzxbLi.js";const C=JSON.parse('{"title":"NFT交易所构建","description":"","frontmatter":{"title":"NFT交易所构建","author":"Ray","date":"2025/02/22 21:30","categories":["web3生态"],"tags":["web3"],"showComment":false},"headers":[],"relativePath":"courses/web3/01-evm/03-NFT交易所构建.md","filePath":"courses/web3/01-evm/03-NFT交易所构建.md","lastUpdated":1743870828000}'),l={name:"courses/web3/01-evm/03-NFT交易所构建.md"},t=e(`<h2 id="nft交易所" tabindex="-1">NFT交易所 <a class="header-anchor" href="#nft交易所" aria-label="Permalink to &quot;NFT交易所&quot;">​</a></h2><h2 id="erc20代币标准" tabindex="-1">ERC20代币标准 <a class="header-anchor" href="#erc20代币标准" aria-label="Permalink to &quot;ERC20代币标准&quot;">​</a></h2><p>以太坊的代币标准，如果要发行自己的代币的话，就需要自己用到这个合约</p><ul><li>转账余额(balancOf())</li><li>转帐(transfer())</li><li>授权转账(transferFrom())</li><li>授权(approve())</li><li>代币总供给(totalSupply())</li><li>授权转账额度(allowance)</li><li>代币信息(可选)</li></ul><h3 id="ierc20" tabindex="-1">IERC20 <a class="header-anchor" href="#ierc20" aria-label="Permalink to &quot;IERC20&quot;">​</a></h3><p>规定的是ERC标准的接口合约(大部分项目都有接口先行这个概念，为了就是统一开发人员的实现)，规定了ERC代币需要实现的函数和事件</p><h4 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h4><ul><li>释放条件：当 <code>value</code>单位的货币从账户from转移到另一账户时to时</li></ul><div class="language-solidity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">event</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Transfer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> indexed</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> indexed</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> to</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">uint256</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><ul><li>当 <code>value</code>单位的货币从账户owner授权给另一账户spender时</li></ul><div class="language-solidity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">event</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Approval</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> indexed</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> owner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> indexed</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> spender</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">uint256</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> vlaue</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h4 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h4><ul><li>totalSupply()返回代币总供给</li><li>balanceOf()返回账户余额</li><li>transfer()转账</li><li>allowance()返回授权额度</li><li>approve()授权</li><li>transferFrom()授权转账</li></ul><p>最后:ERC20是<strong>同质化代币</strong>的标准</p><h2 id="erc721非同质化代币标准" tabindex="-1">ERC721非同质化代币标准 <a class="header-anchor" href="#erc721非同质化代币标准" aria-label="Permalink to &quot;ERC721非同质化代币标准&quot;">​</a></h2><p><strong>ERC165</strong></p><p>这个合约接口规定了智能合约可以声明他支持的接口</p><div class="language-solidity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> IERC165</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> supportInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">bytes4</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> interfacedId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">external</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> returns</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>我们可以看下ERC721是如何实现supportInterface()函数的</p><div class="language-solidity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> supportInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">bytes4</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;"> interfaceId</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">external</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> view</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> returns</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> interfaceId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(IERC721).interfaceId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> interfaceId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(IERC165).interfaceId;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>其实就是通过type(xxx)这个语法来实现的.</p><p>接下来我们来看看都有哪些ERC721</p><h3 id="事件-1" tabindex="-1">事件 <a class="header-anchor" href="#事件-1" aria-label="Permalink to &quot;事件&quot;">​</a></h3><p>有3个事件，其中Transfer和Approval事件也有，这也是二者都作为代币所具有的共性</p><ul><li>Transfer事件：在转账时被释放，记录代币的发出地址from，接收地址to和tokenId</li><li>Approval事件：在授权时被释放，记录授权地址owner，被授权地址approved和tokenId</li><li>ApprovalForAll：在批量授权时释放，记录批量授权的发出地址owner，被授权地址operator和授权与否的approved</li></ul><h3 id="函数-1" tabindex="-1">函数 <a class="header-anchor" href="#函数-1" aria-label="Permalink to &quot;函数&quot;">​</a></h3><ul><li>balanceOf：返回某地址的NFT持有量balance</li><li>ownerOf：返回某tokenId的主人owner</li><li>transferFrom：普通转账，参数为转出地址from，接收地址to和tokenId</li><li>safeTransferFrom：安全转账(如果接收方是合约地址，会要求实现ERC721Receiver接口)。参数为转出地址from，接收地址为tokenId</li><li>approve：授权另一个地址使用你的NFT，参数为被授权地址approve和tokenId</li><li>getApproved：查询tokenId被批准给了哪个地址。</li><li>setApprovalForAll：将自己持有的系列NFT批量授权给某个地址operator</li><li>isApprovedForAll：查询某地址的NFT是否批量授权给了另一个operator地址</li><li>safeTransferFrom：安全转账的重载函数，里面包含了data</li></ul><h2 id="erc1155" tabindex="-1">ERC1155 <a class="header-anchor" href="#erc1155" aria-label="Permalink to &quot;ERC1155&quot;">​</a></h2>`,28),n=[t];function h(p,r,k,d,o,c){return s(),a("div",null,n)}const y=i(l,[["render",h]]);export{C as __pageData,y as default};
